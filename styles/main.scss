$primary: #D41A17;
$border: #DDDFE2;
$icon: #D6D6D6;
$secondary: #949596;

$shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);

* {
	box-sizing: border-box;
	-webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
	min-height: 100svh; // Never shorter than the viewport with collapsed browser controls
	max-height: 100lvh; // Never longer than the viewport with expanded browser controls
	height: 100dvh; // Should dynamically adapt to svh or lvh (but isn't very reliable)
	margin: 0;
	font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
	display: flex;
	flex-direction: column;
	font-size: 16px;
	color: #1D2129;
	overscroll-behavior: none; // Prevent pull-to-refresh on Android (this is not widely confirmed but worth the try)
	overflow: hidden;
	background-color: #FAFBFC;
	
	@media (display-mode: standalone) or (display-mode: fullscreen) {
		height: 100lvh;
	}
}

p {
	margin: 0;
	line-height: 1.4;
	
	& + p { margin-top: 6px; }
}

a {
	text-decoration: none;
	color: inherit;
}

.red { background-color: $primary; }

.container {
	margin: 0 auto;
	width: 100%;
	padding: 0 15px;
}

.wrapper {
	flex-grow: 1;
	overflow: auto;
	-webkit-overflow-scrolling: touch; // Should be default in the meantime
	display: flex;
	overscroll-behavior: contain; // Do not bubble scrolling to the body if the limits of the wrapper are exceeded (prevents ugly rubberbanding of the body)
	align-items: flex-start; // Otherwise contained elements are calculated with a maximal height of 100% and possible padding-bottom is discarded
	
	// Cause the wrapper to always scroll vertically because otherwise scrolling would completely bubble to the body
	&.ensure-scroll::before {
		width: 0;
		height: calc(100% + 1px);
		content: '';
		display: block;
	}
}

iframe {
	border: 0;
	height: 100%;
	flex-grow: 1;
}

header {
	background: linear-gradient($primary, darken($primary, 3%));
	color: #FFF;
	z-index: 10;
	box-shadow: $shadow;
	font-size: 22px;
	padding: 13px 0;
	padding-top: max(13px, env(safe-area-inset-top));
	flex-shrink: 0;
	overflow: hidden; // Chrome otherwise scales the viewport if the content exceeds its dimensions
	
	.container {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
	
	a {
		padding: 6px;
		line-height: 1;
	}
	
	.title {
		padding: 0 8px;
		font-weight: 300;
	}
}

footer {
	background: #FFF;
	border-top: 1px solid $border;
	padding: 9px 0;
	padding-bottom: max(9px, env(safe-area-inset-bottom));
	flex-shrink: 0;
	
	.container {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
	
	a {
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 20%;
		
		.icon {
			font-size: 1.6em;
			padding-bottom: 2px;
			color: $icon;
			text-shadow: 1px 1px 1px #FFF;
		}
			
		.title {
			font-weight: 300;
			font-size: 0.8em;
			color: $secondary;
		}
		
		&.active span { color: $primary; }
	}
}

.article {
	background-color: #FFF;
	border-radius: 4px;
	border: 1px solid $border;
	overflow: hidden;
	
	.title {
		font-weight: 500;
		font-size: 17px;
	}
	
	& + .article { margin-top: 12px; }

	&.tip {
		display: flex;
		
		.strip {
			padding: 0.5em 0;
			color: #FFF;
			font-size: 1.6em;
			width: 2.5em;
			display: flex;
			align-items: center;
			justify-content: center;
			flex-shrink: 0;
		}
		
		.text {
			flex-grow: 1;
			padding: 12px 16px;
		}
		
		.title {
			margin-bottom: 8px;
		}
		
		.description {
			font-size: 14px;
			color: $secondary;
		}
		
		.arrow {
			display: flex;
			align-items: center;
			justify-content: center;
			padding-right: 0.8em;;
			color: $icon;
			flex-shrink: 0;
			font-size: 1.4em;
		}
	}
}

.list {
	padding: 20px 0;
	margin: 0 auto;
}

.screen {
	color: $secondary;
	text-align: center;
	margin: auto;
	padding: 30px 0;
	
	.icon {
		font-size: 64px;
		text-shadow: 1px 1px 1px #FFF;
		color: $icon;
		margin-bottom: 24px;
	}
	
	.title {
		font-size: 24px;
		font-weight: 300;
	}
	
	.line {
		height: 1px;
		margin: 16px 40px 14px;
		background: linear-gradient(to right, rgba($border, 0) 0%, $border 20%, $border 80%, rgba($border, 0) 100%);
		box-shadow: 1px 1px 1px #FFF;
	}
	
	.button {
		border-radius: 3px;
		color: #FFF;
		background-image: linear-gradient($primary, darken($primary, 8%));
		padding: 12px 24px;
		box-shadow: $shadow;
		font-weight: 300;
		margin-top: 60px;
		display: inline-block;
	}
}

.dashboard {
	padding: 30px 0;
	flex-grow: 1;
	
	.widget + .widget { margin-top: 2em; }
				
	h5 {
		margin: 0 0 12px;
		color: $secondary;
		font-weight: 500;
	}
}

nav {
	background-color: #FFF;
	border-bottom: 1px solid $border;
	color: $secondary;
	z-index: 9;
	
	.container {
		height: 50px;
		display: flex;
		align-items: center;
		justify-content: space-between;
	}
	
	a {
		padding: 8px 0;
		color: $primary;
				
		&.save {
			&::after { content: attr(data-idle); }
			
			&.active {
				color: $secondary;
				
				&::after { content: attr(data-active); }
			}
		}
	}
}

.note {
	text-align: center;
	padding-top: 20px;
	color: $secondary;
	font-size: 0.7em;
	font-weight: 300;
	
	a { font-weight: 500; }
}

.timetable { $height: 13px; // Perfectly fills the screen on iPhone 12 mini
	display: flex;
	margin: 0 auto;
	
	.col {
		white-space: normal;
		flex-shrink: 0;
		height: (44*$height) + 50px;
		display: flex;
		flex-direction: column;
		
		.head {
			height: 54px;
			backdrop-filter: blur(10px);
			background-color: rgba(252,252,252,.85);
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			padding: 0 20px;
			position: sticky;
			top: 0;
			z-index: 1;
					
			.day {
				font-size: 14px;
				font-weight: 500;
			}
			
			.date {
				font-size: 12px;
				color: $secondary;
			}
		}
		
		table {
			table-layout: fixed;
			border-collapse: collapse;
		
			tr {
				height: $height;
				
				&.block { background-color: #F4F6F8; }
			
				td.occupied {
					position: relative;
					min-width: 120px;
					
					&[colspan="12"] { min-width: 140px; }
				}
			}
		}
	}
	
	.lecture { $padding: 1px;
		position: absolute;
		top: $padding;
		left: $padding;
		right: $padding;
		bottom: $padding;
		color: #FFF;
		display: flex;
		flex-direction: column;
		border-radius: 3px;
		
		.title {
			font-size: 12px;
			padding: 5px 6px 0;
			display: -webkit-box;
			-webkit-line-clamp: 2;
			-webkit-box-orient: vertical;
			overflow: hidden;
			text-overflow: ellipsis;
			word-wrap: break-word;
			font-weight: 500;
		}
		
		.time {			
			font-size: 10px;
			padding: 2px 6px 0;
		}
		
		.info {
			font-size: 10px;
			display: flex;
			justify-content: space-between;
			padding: 0 6px 5px;
			position: absolute;
			bottom: 0;
			right: 0;
			left: 0;
		}
		
		.lecturer {
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
		}
		
		.room {
			flex-shrink: 0;
		}
		
		.icon {
			padding-right: 2px;
		}
		
		.data + .data { padding-left: 1em; }
		
		.data:only-child { margin-left: auto; }
	}
}

.subjects {
	border-width: 1px 0;
	border-style: solid;
	border-color: $border;
	background-color: #FFF;
	
	.item {
		padding: 8px 6px;
		
		&.active {
			.courses { display: block; }
			
			.header .arrow::before {
				content: "\f106";
			}
		}
		
		& + .item { border-top: 1px solid #F1F2F3; }
	}
	
	.header {
		display: flex;
		
		label {
			padding: 8px 0;
			display: flex;
			align-items: center;
		}
		
		.checkbox {
			padding-right: 8px;
		}
		
		.name { font-weight: 500; }
		
		.amount {
			font-weight: 300;
			color: $secondary;
			padding-left: 6px;
		}
		
		.arrow {
			flex-grow: 1;
			display: flex;
			align-items: center;
			justify-content: flex-end;
			color: $icon;
			font-size: 22px;
			
			&::before {
				content: "\f107";
			}
		}
	}
		
	.courses {
		display: none;
		padding-left: 24px;
		
		label {
			display: flex;
			align-items: center;
			padding: 8px 0;
		}
		
		.checkbox {
			padding-right: 8px;
		}
	}
	
	input[type="checkbox"] {
		width: 0;
		height: 0;
		
		& ~ .checkbox::before {
			content: "\f0c8";
			color: $secondary;
		}
		
		&:checked ~ .checkbox::before {
			content: "\f14a";
			color: $primary;
			font-weight: 900;
		}
		
		&:indeterminate ~ .checkbox::before {
			content: "\f146";
			color: $primary;
			font-weight: 900;
		}
	}
}
